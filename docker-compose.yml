# Development docker-compose.yml
version: '3.5'

services:
    devbox:
        container_name: devbox-nginx
        build:
            context: ./docker/nginx
            dockerfile: Dockerfile
        ports:
            - "9002:80"
        volumes:
            - .:/app:cached
        restart: unless-stopped
        depends_on:
            - devbox-service
        networks:
            - backend_network

    devbox-service:
        container_name: devbox-service
        build:
            context: .
        volumes:
            - .:/app:cached
            - ./docker/service/php.ini:/usr/local/etc/php/conf.d/99-app.ini
            - ./docker/service/www.conf:/usr/local/etc/php-fpm.d/www.conf
        restart: unless-stopped
        environment:
            XDEBUG_CONFIG: ${XDEBUG_CONFIG}
            APP_ENV: ${APP_ENV}
            APP_DEBUG: ${APP_DEBUG}
            APP_SECRET: ${APP_SECRET}
        env_file:
            - .env
        depends_on:
            - mysql
            - rabbitmq
            - elasticsearch
        networks:
            - backend_network

    mysql:
        image: mysql:8.0
        container_name: mysql
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: database
        ports:
            - "3308:3306"
        volumes:
            - database-volume:/var/lib/mysql
        networks:
            - backend_network

    rabbitmq:
        image: rabbitmq:3.7-management
        container_name: 'rabbitmq'
        ports:
            - "5672:5672"
            - "15672:15672"
        volumes:
            - ~/.docker/rabbitmq/data/:/var/lib/rabbitmq/
            - ~/.docker/rabbitmq/log/:/var/log/rabbitmq
        networks:
            - backend_network

    elasticsearch:
        image: elasticsearch:7.17.6
        environment:
            "discovery.type": single-node
        ports:
            -   "9200:9200"
            -   "9300:9300"
        networks:
            - backend_network

volumes:
    database-volume:
        driver: "local"

networks:
    backend_network:
        driver: bridge
